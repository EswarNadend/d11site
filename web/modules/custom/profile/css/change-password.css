/* CSS CODE FOR CHANGE-PASSWORD */

 /* Adding  css property for the  selector */
.page-sec{
    margin: 0px !important;
}
.flexslider{
    display: none !important;
}
 /* Adding  css property for the  selector */
.page-sec.container{
    width:100% !important;
    max-width: 100% !important;
}
 /* Adding  css property for the  selector */
#change-password-form-wrapper{
    background-image: url('../../profile/images/registeration-bg.png');
    background-size: cover;
}
 /* Adding  css property for the  selector */
#change-password-form .submit{
    background-color:#ffe484 !important;
    color: white !important;
    font-weight: 500;
}
 /* Adding  css property for the  selector */
.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover{
    background-color: #ffe484 !important;
    color: #ffffff !important;
}


/* Validate Password */
/* The CSS code block you provided is styling the input elements on a webpage. Here's a breakdown of
what each property is doing: */
.navbar-slider .slider1{
	display:none;
}
#change-password-form input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
  }
#edit-search-api-fulltext{
  width:auto !important
}
  .validate-box{
    display: flex;
    /* flex-direction: column;
    justify-content: center;
    align-items: center; */
  }
  .password-box{
    width:45%;
    margin-top:72px;
  }

  /* Style the submit button */
 #change-password-form input[type=submit] {
    background-color: #04AA6D;
    color: white;
  }

  /* The message box is shown when the user clicks on the password field */
  #message {
    display:none;
    background: #f1f1f1;
    color: #000;
    position: relative;
    padding: 20px;
    margin-top: 10px;
  }
  
  /* The `#message p` selector in the CSS code block is targeting the paragraph elements (`<p>`) that
  are descendants of an element with the id `message`. */
  #message p {
    padding: 10px 35px;
    font-size: 18px;
  }
  
  /* Add a green text color and a checkmark when the requirements are right */
  .valid {
    color: green;
  }
  
  /* The `.valid:before` CSS selector is styling a pseudo-element that is inserted before the content
  of elements with the class `.valid`. */
  /* .valid:before {
    position: relative;
    left: -10px;
    content: url('../../image/valid.svg');
  } */
  
  /* Add a red text color and an "x" when the requirements are wrong */
  .invalid {
    color: red;
  }
  
  /* The `.invalid:before` CSS selector is styling a pseudo-element that is inserted before the content
  of elements with the class `.invalid`. It sets the position of the pseudo-element to be relative
  to the element it is attached to, shifts it 10 pixels to the left, and sets the content of the
  pseudo-element to be an image specified by the URL `../../image/invalid.svg`. This allows for the
  visual representation of an "x" icon before elements marked as invalid. */
  .invalid:before {
    position: relative;
    left: -10px;
    content: url('web/themes/custom/engage_theme/images/Profile/invalid.svg');
  }
/* The `.is-invalid` CSS class is setting a red border with a thickness of 1 pixel around elements that
have this class applied to them. This styling is commonly used to visually indicate that the element
is considered invalid or has an error associated with it. */
  .is-invalid{
    border : 1px solid red;
  }

   /* Adding  css property for the  selector */
.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover{
    background-color: #ffe484 !important;
    color: #ffffff !important;
}

/* The `@media screen and (max-width:525px) and (min-width:319px)` block in the CSS code you provided
contains styles that will be applied when the screen width falls within the specified range of 319px
to 525px. */
@media screen and (max-width:525px) and (min-width:319px) {
  /* The `.divider` CSS class is setting a margin of 5 pixels on the top and bottom (vertical margin)
  and 0 pixels on the left and right (horizontal margin) for elements that have this class applied
  to them. This styling will create a space of 5 pixels above and below the element, effectively
  adding vertical spacing around it. */
  .divider{
    margin: 5px 0;
  }
  /* The `.changepassalert` CSS block is styling an element with the class `changepassalert`. Here's a
  breakdown of what each property is doing: */
  .changepassalert {
    display: block;
    position: absolute;
    width: 100%;
    left: 18px;
    top: -155px;
  }

  /* The CSS block `.changepassalert .tooltipValidationNewPassword` is styling an element with the
  class `tooltipValidationNewPassword` that is a descendant of an element with the class
  `changepassalert`. */
  .changepassalert .tooltipValidationNewPassword {
    position: relative;
    top: 52px;
  }

  /* The CSS block `.changepassalert .tooltipValidationConfirm` is styling an element with the class
  `tooltipValidationConfirm` that is a descendant of an element with the class `changepassalert`. */
  .changepassalert .tooltipValidationConfirm {
    position: relative;
    top: 70px;
  }
}

#confirm-password-error,
#new-password-error,
#old-password-error{
  color:rgb(183, 2, 2) !important;
}


#engage_form_input .js-form-item {
    position: relative;
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
}

/* Input, select, and date styling */
#engage_form_input .js-form-item input,
#engage_form_input .js-form-item select,
#engage_form_input .js-form-item input[type="date"] {
    padding: 1rem 0.625rem 0.625rem;
    /* pt-4 px-2.5 pb-2.5 */
    font-size: 0.875rem;
    /* text-sm */
    color: #111827;
    /* text-gray-900 */
    background-color: transparent;
    border: 1px solid #D1D5DB;
    /* border-gray-300 */
    border-radius: 0.5rem;
    /* rounded-lg */
    width: 100%;
    max-width: 100%;
    appearance: none;
}

@media (min-width: 1024px) {

    /* #engage_form_input .js-form-item input,
    #engage_form_input .js-form-item select,
    #engage_form_input .js-form-item input[type="date"] {
        max-width: 32rem;
    } */
}

/* On focus */
#engage_form_input .js-form-item input:focus,
#engage_form_input .js-form-item select:focus,
#engage_form_input .js-form-item input[type="date"]:focus {
    border-color: #F59E0B;
    /* yellow-600 */
    outline: none;
    box-shadow: none;
}

/* Label default: inside the input */
#engage_form_input .js-form-item label {
    position: absolute;
    top: 1rem;
    /* 12px from top */
    left: 0.5rem;
    /* px-2 */
    font-size: 1rem;
    /* 16px */
    color: #4B5563;
    /* gray-600 */
    background-color: white;
    padding: 0 0.5rem;
    transition: all 0.3s ease;
    transform-origin: left;
    transform: translateY(0.25rem) scale(0.75);
    /* appear embedded */
    z-index: 10;
    opacity: 0.8;
}

/* Label when input is focused or filled */
#engage_form_input .js-form-item input:focus+label,
#engage_form_input .js-form-item input:not(:placeholder-shown)+label,
#engage_form_input .js-form-item select:focus+label,
#engage_form_input .js-form-item select:not([value=""])+label,
#engage_form_input .js-form-item input[type="date"]:focus+label,
#engage_form_input .js-form-item input[type="date"]:not(:placeholder-shown)+label {
    top: -1rem;
    font-size: 0.875rem;
    /* 14px */
    color: #D97706;
    /* amber-600 */
    transform: translateY(0) scale(1);
}

/* Label when input is empty */
#engage_form_input .js-form-item input:placeholder-shown+label,
#engage_form_input .js-form-item input[type="date"]:placeholder-shown+label {
    top: 50%;
    transform: translateY(-50%) scale(1);
    font-size: 1rem;
}

/* Disabled input styles */
#engage_form_input .js-form-item input:disabled,
#engage_form_input .js-form-item select:disabled,
#engage_form_input .js-form-item input[type="date"]:disabled {
    background-color: #f9fafb;
    /* gray-50 */
    color: #9ca3af;
    /* gray-400 */
}

#engage_form_input .js-form-item label.floating {
    top: -0.75rem;
    transform: translateY(0) scale(0.875);
    font-size: 0.875rem;
    color: #D97706;
}


#engage_form_input .form-submit#edit-submit {
    background-color: #ffcc00;
    border-radius: 10px;
    width: 180px;
    height: 50px;
    padding: 2px 2px 4px 2px;
    font-size: 20px !important;
    cursor: pointer;
    color: #fff;
    font-weight: 600;
}

#engage_form_input .js-form-item label.error {
  position: static !important;
  font-size: 1rem;
  color: #DC2626 !important; /* red */
  transform: none !important;
  top: auto;
  left: auto;
  background: none;
  padding: 0;
}

#engage_form_input .js-form-item.form-item-files-upload-file label{
      position: static !important;
   transform: none !important;
  top: auto;
  left: auto;
  background: none;
  padding: 0;
    /* appear embedded */
    z-index: 10;
    opacity: 1;
}
#engage_form_input .js-form-item.form-item-files-upload-file label[for='edit-upload-file'].floating{
     top: auto;
    transform: none !important;
    color: #333333;
}

#engage_form_input .js-form-item label.form-checkbox  {
    position: Static;
    top: auto;
    /* 12px from top */
    left: auto;
    /* px-2 */
    font-size: 2rem;
    /* 16px */
    color: #4B5563;
    /* gray-600 */
    background-color: none !important;
    padding: 0;
    /* transition: all 0.3s ease;
    transform-origin: left; */
    transform: none !important;
    /* appear embedded */
    z-index: 10;
    opacity: 1;
}

#engage_form_input .form-type-checkbox label {
  position: static !important;
  transform: none !important;
  background: none;
  padding: 0;
  color: #4B5563;
  font-size: 1rem;
  opacity: 1;
}
#engage_form_input .form-type-checkbox input{
     padding: 0 !important;
    /* pt-4 px-2.5 pb-2.5 */
    font-size: 0.875rem;
    /* text-sm */
    color: #111827;
    /* text-gray-900 */
    background-color: transparent;
    border: 1px solid #D1D5DB;
    /* border-gray-300 */
    border-radius: 0.5rem;
    /* rounded-lg */
    width: 1rem !important;
    max-width: 100%;
    appearance:auto !important;
}
#engage_form_input .form-type-checkbox{
    display: contents !important;
}
[data-drupal-messages] {
  display: none !important;
}

	#password-validator {
				position: absolute;
				z-index: 50;
				margin-top: 20px;
				display: none;
				transition: 0;
			}
			.fade-out {
				opacity: 0;
				pointer-events: none;
			}
			#password-validator.fade-out {
				transition: opacity 1s;	
			}
			.arrow {
				height: 25px;
				left: 50%;
				overflow: hidden;
				position: absolute;
				top: -25px;
				-webkit-transform: (-50%);
				-ms-transform: translateX(-50%);
				transform: translateX(-50%);
				width: 50px;
			}
			.arrow::after {
				background: #FFFFFF;
				box-shadow: 1px 1px 14px 0px rgb(0 0 0 / 20%);
				content: "";
				height: 20px;
				left: 50%;
				position: absolute;
				-webkit-transform: translateX(-50%) translateY(75%) rotate(45deg);
				-ms-transform: translateX(-50%) translateY(75%) rotate(45deg);
				transform: translateX(-50%) translateY(75%) rotate(45deg);
				width: 20px;
			}
			.inputValidationIndicator {
				border-top-left-radius: 10px;
				border-top-right-radius: 10px;
				border-bottom-left-radius: 10px;
				border-bottom-right-radius: 10px;
				padding-top: 15px;
				padding-right: 14px;
				padding-bottom: 10px;
				padding-left: 14px;
				background-color: #FFFFFF;
				box-shadow: 1px 1px 14px 0px rgb(0 0 0 / 20%);
				font-size: 11px;
				line-height: 15px;
			}
			.header {
				font-size: 12px;
				font-weight: 400;
				margin-bottom: 15px;
				padding-left: 4px;
			}
			.conditionList {
				padding-left: 0px;
			}
			.conditionWrapper {
				padding-top: 3px;
				padding-right: 0px;
				padding-bottom: 3px;
				padding-left: 4px;
				list-style-type: none;
				margin-bottom: 4px;
				color: red;
			}