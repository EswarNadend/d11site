<?php

use Drupal\Core\Render\Element;

/**
 * Implements hook_preprocess_page().
 */

function engage_theme_preprocess_page(array &$variables) {
  // Attach assets
  $variables['#attached']['library'][] = 'engage_theme/flexslider';
  $variables['#attached']['library'][] = 'engage_theme/swiper';
  $variables['#attached']['library'][] = 'engage_theme/global-library';
  $variables['#attached']['library'][] = 'engage_theme/global-styling';
  $variables['#attached']['library'][] = 'engage_theme/global-scripts';

  // Ensure user-specific data varies by user
  $variables['#cache']['contexts'][] = 'user';

  if (!empty($variables['user'])) {
    $variables['user_display_name'] = $variables['user']->getDisplayName();
  }
  //   if ($variables['node']->bundle() == 'ideas') {
  //   $variables['userLogged'] = \Drupal::currentUser()->isAuthenticated();
  // }
  $global_service = \Drupal::service('global_module.global_variables');

  $globalVariables = $global_service->getGlobalVariables();
  $machine_name = 'openidconnectlogin';
// print_r($machine_name);exit;
	$block = \Drupal::entityTypeManager()->getStorage('block')->load($machine_name);
  // print_r("Block",$block);exit;
	if (!empty($block)) {
		$block_content = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
		$pre_render = $block_content;
		$variables['idam_integration'] = $block_content;
	}


  //globalVariables
    $variables['#attached']['drupalSettings']['globalVariables']['webportalUrl'] = $globalVariables['applicationConfig']['config']['siteUrlddev'];
   $variables['#attached']['drupalSettings']['globalVariables']['fileuploadPath'] = $globalVariables['applicationConfig']['config']['fileuploadPath'];
    $variables['#attached']['drupalSettings']['globalVariables']['fileuploadUrl'] = $globalVariables['applicationConfig']['config']['fileuploadUrl'];
    $variables['#attached']['drupalSettings']['globalVariables']['siteUrl'] = $globalVariables['applicationConfig']['config']['siteUrl'];
    $variables['#attached']['drupalSettings']['globalVariables']['baseName'] = $globalVariables['applicationConfig']['config']['baseName'];
    $variables['#attached']['drupalSettings']['globalVariables']['ceptenantId'] = $globalVariables['applicationConfig']['config']['ceptenantId'];
    $variables['#attached']['drupalSettings']['globalVariables']['cadtenantId'] = $globalVariables['applicationConfig']['config']['cadtenantId'];
    $variables['#attached']['drupalSettings']['globalVariables']['ceptenantCode'] = $globalVariables['applicationConfig']['config']['ceptenantCode'];
    $variables['#attached']['drupalSettings']['globalVariables']['tenantCode'] = $globalVariables['applicationConfig']['config']['tenantCode'];
    $variables['#attached']['drupalSettings']['globalVariables']['userLogged'] = \Drupal::currentUser()->isAuthenticated();
// dump($variables);
  }

function engage_theme_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'engage_theme/global-scripts';
}

// function _engage_theme_has_homepage_slider(array $variables)
// {
//   return _engage_theme_check_field_in_regions($variables, 'field_homepage_slider_banner');
// }

// function _engage_theme_has_homepage_advertisement_slider(array $variables)
// {
//   return _engage_theme_check_field_in_regions($variables, 'field_homepage_advertisement_sli');
// }

// /**
//  * Check whether a field exists in any region on the page.
//  */
// function _engage_theme_check_field_in_regions(array $variables, $field_name)
// {
//   foreach ($variables as $region) {
//     if (is_array($region)) {
//       foreach (Element::children($region) as $key) {
//         if (strpos($key, $field_name) !== FALSE) {
//           return TRUE;
//         }
//       }
//     }
//   }
//   return FALSE;
// }


function engage_theme_preprocess_paragraph__slider_banner(array &$variables)
{
  // Let Drupal render the field with responsive image style.
  $image_field = $variables['content']['field_slider_banner_image'] ?? NULL;

  if ($image_field) {
    // Render the field to extract the 'src' attribute of the largest image.
    $rendered = \Drupal::service('renderer')->renderPlain($image_field);

    // Match first image URL from the rendered <img> or <source>.
    if (preg_match('/src="([^"]+)"/', $rendered, $matches)) {
      $variables['image_url'] = $matches[1];
    }
  }
}
